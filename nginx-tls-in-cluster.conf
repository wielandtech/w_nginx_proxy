# NGINX Reverse Proxy Configuration for Homelab with TLS Termination in Cluster
# This configuration forwards both HTTP and HTTPS traffic to the homelab
# while allowing Let's Encrypt ACME challenges to reach cert-manager

# Upstream configuration for homelab
upstream homelab_http {
    # Replace with your homelab WAN IP or DDNS hostname
    server YOUR_HOMELAB_IP:80;
}

upstream homelab_https {
    # Replace with your homelab WAN IP or DDNS hostname
    server YOUR_HOMELAB_IP:443;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

# HTTP server block - forwards to homelab for ACME challenges and redirects to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name wielandtech.com www.wielandtech.com;
    
    # Allow ACME challenges to reach homelab for Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        proxy_pass http://homelab_http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server block - TCP/TLS passthrough to homelab
server {
    listen 443;
    listen [::]:443;
    server_name wielandtech.com www.wielandtech.com;
    
    # Use TCP/TLS passthrough (stream) instead of SSL termination
    # This forwards the encrypted traffic directly to homelab
    # Note: This is a placeholder - actual implementation requires nginx stream module
    
    # For Layer 7 proxy with SNI passthrough, use the configuration below
    ssl_preread on;
    proxy_pass homelab_https;
    proxy_protocol on;
}

# Alternative: Layer 7 HTTPS proxy (terminates and re-encrypts)
# Use this if you want NGINX to inspect the traffic
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wielandtech.com www.wielandtech.com;
    
    # SSL configuration - these will be automatically managed by homelab
    # NGINX will verify the homelab certificate
    ssl_certificate /etc/nginx/ssl/proxy-cert.pem;  # Dummy cert for initial setup
    ssl_certificate_key /etc/nginx/ssl/proxy-key.pem;
    ssl_verify off;  # Don't verify homelab certificate
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client settings
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Main location block
    location / {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to homelab HTTPS endpoint
        proxy_pass https://homelab_https;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass https://homelab_https;
        proxy_ssl_verify off;
        proxy_set_header Host $host;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# WebSocket upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

