# NGINX Reverse Proxy Configuration
# Main configuration file with stream module for HTTPS pass-through

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP Configuration
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format proxy '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     'rt=$request_time uct="$upstream_connect_time" '
                     'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log proxy;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer Settings
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Upstream Configuration
    upstream homelab_http {
        # Primary homelab server
        server ${HOMELAB_IP}:80 max_fails=3 fail_timeout=30s;
        
        # Connection settings
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag "noindex, nofollow" always;

    # Rate limiting configuration
    limit_req_status 429;
    limit_conn_status 429;

    # Include site configurations
    include /etc/nginx/conf.d/*.conf;
}

# Stream Configuration for HTTPS Pass-through
stream {
    # Logging for stream connections
    error_log /var/log/nginx/stream_error.log warn;
    access_log /var/log/nginx/stream_access.log;

    # Upstream for HTTPS pass-through
    upstream homelab_ssl {
        server ${HOMELAB_IP}:443 max_fails=3 fail_timeout=30s;
    }

    # Map to detect SSL/TLS traffic
    map $ssl_preread_server_name $backend_pool {
        wielandtech.com homelab_ssl;
        www.wielandtech.com homelab_ssl;
        default homelab_ssl;
    }

    # HTTPS Pass-through Server
    server {
        listen 443;
        proxy_pass $backend_pool;
        
        # SSL preread to get SNI
        ssl_preread on;
        
        # Proxy settings
        proxy_timeout 1s;
        proxy_connect_timeout 1s;
        proxy_responses 1;
        
        # Buffer settings
        proxy_buffer_size 4k;
    }
}
