# Configuration for TLS Termination in Homelab Cluster
# This config handles HTTP traffic: ACME challenges and redirects to HTTPS
# HTTPS traffic is handled by the stream block in nginx.conf (TCP passthrough)

# Rate Limiting Zones
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# HTTP Server Configuration - upstream for ACME challenges
upstream homelab_http {
    server ${HOMELAB_IP}:80 max_fails=3 fail_timeout=30s;
    keepalive 8;
    keepalive_timeout 60s;
}

# HTTP Server Block - handles ACME challenges and redirects
server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # Logging
    access_log /var/log/nginx/wielandtech_http_access.log main;
    error_log /var/log/nginx/wielandtech_http_error.log warn;

    # Client settings
    client_max_body_size 10M;
    client_body_timeout 30s;
    client_header_timeout 30s;

    # Redirect www to non-www HTTPS
    if ($host = www.${DOMAIN}) {
        return 301 https://${DOMAIN}$request_uri;
    }

    # Health check endpoint for monitoring
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Let's Encrypt ACME challenge path
    # This MUST be forwarded to homelab for cert-manager to respond
    location /.well-known/acme-challenge/ {
        # No rate limiting for ACME challenges
        limit_req off;
        
        # Forward to homelab where cert-manager will respond
        proxy_pass http://homelab_http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;
        
        # ACME challenge timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Disable buffering for ACME challenges
        proxy_buffering off;
        
        # Log ACME challenges for debugging
        access_log /var/log/nginx/acme_challenge.log main;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        
        return 301 https://$host$request_uri;
    }

    # Security headers (even for redirects)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
}

# Note: HTTPS traffic is handled by the stream block in nginx.conf
# The stream block forwards encrypted traffic directly to homelab (TCP passthrough)
# TLS termination happens in the homelab cluster with Traefik
